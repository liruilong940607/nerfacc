name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-2019] # macos-11
        python-version: ['3.9']
        torch-version: ['1.10.0', '1.11.0', '1.12.0', '1.13.0']
        cuda-version: ['cu102', 'cu113', 'cu115', 'cu116', 'cu117']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # - name: Install tools
      #   run: sudo apt-get update && sudo apt-get install -y lsb-release && sudo apt-get clean all

      - name: Setup packages
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          torch-version: ${{ matrix.torch-version }}
          cuda-version: ${{ matrix.cuda-version }}
      
      - name: Set version on non-macOS
        if: ${{ runner.os != 'macOS' }}
        run: |
          VERSION=`sed -n 's/^__version__ = "\(.*\)"/\1/p' nerfacc/version.py`
          TORCH_VERSION=`echo "pt${{ matrix.torch-version }}" | sed "s/..$//" | sed "s/\.//g"`
          CUDA_VERSION=`echo ${{ matrix.cuda-version }}`
          echo "New version name: $VERSION+$TORCH_VERSION$CUDA_VERSION"
          sed -i "s/$VERSION/$VERSION+$TORCH_VERSION$CUDA_VERSION/" nerfacc/version.py
        shell: bash

      - name: Set version on macOS
        if: ${{ runner.os == 'macOS' }}
        run: |
          VERSION=`sed -n 's/^__version__ = "\(.*\)"/\1/p' nerfacc/version.py`
          TORCH_VERSION=`echo "pt${{ matrix.torch-version }}" | sed "s/..$//" | sed "s/\.//g"`
          echo "New version name: $VERSION+$TORCH_VERSION"
          sed -i "" "s/$VERSION/$VERSION+$TORCH_VERSION/" nerfacc/version.py
        shell: bash

      - name: Build wheel
        run: |
          source ./.github/workflows/cuda/${{ runner.os }}-env.sh ${{ matrix.cuda-version }}
          python setup.py bdist_wheel --dist-dir=dist
        shell: bash

      - name: Test wheel
        run: |
          cd dist
          pip install *.whl
          python -c "import torch; print('torch:', torch.__version__)"
          python -c "import nerfacc; print('nerfacc:', nerfacc.__version__)"
          cd ..

      # # Used to host cibuildwheel
      # - uses: actions/setup-python@v3

      # - name: Install cibuildwheel
      #   run: python -m pip install cibuildwheel==2.12.0

      # - name: Build wheels
      #   run: python -m cibuildwheel --output-dir wheelhouse

      # - uses: actions/upload-artifact@v3
      #   with:
      #     path: ./wheelhouse/*.whl